=====================================  第二部分  流  ====================================

        =============================  第四章 引入流 ============================

1、集合讲的是数据，而流讲的是计算

2、流操作有两个重要的特点：流水线，内部迭代

3、流的使用包括三个步骤：数据源、中间操作链、终端操作

4、集合属于数据驱动(先把数据存在内存中在消费)，而流属于需求驱动(当需要数据是再生成数据<生成器>)

5、没有终结操作，返回值是void

        =============================  第五章 使用流 ============================

1、
    根据条件筛选  filter()

    去除重复的元素 distinct()

    截短流        limit()

    跳过前n个元素  skip()

    将每一个元素转化为另一个元素 map()

    流扁平化      flatMap()     将数组的中分别变成流的内容，合并成一个流

    查找和匹配

            功能                  函数         返回值    类型

        检查谓词是否匹配一个元素    anyMatch    boolean  终端操作

        检查谓词是否匹配所有元素    allMatch    boolean  终端操作

        确保没有元素和为此匹配      noneMatch   boolean  终端操作

        返回当前流的任意元素        findAny   Optional<T>  终端操作

        返回当前流第一个元素        findFirst Optional<T>  终端操作


    归约

        求和,统计大小等                      reduce      累加之后的值  终端操作    reduce(初始值,计算行为);

数值流转化为普通流   boxed()

普通流转化为数值流   mapToInt(),mapToDouble,mapToLong

Optional.orElse(值) 如果没有值的话则默认返回什么值




Optional<T> 是一个容器类，代表一个值存在或者不存在，不会返回null




        =============================  第六章 生成流 ============================

用数组生成流 IntStrem

文件生成流   File.lines()

用函数生成流  Stream.iterate()、Stream.generate()



